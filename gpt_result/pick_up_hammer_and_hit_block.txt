```python
class block_hammer_beat(Base_task):

    def setup_demo(self, **kwags):
        # load scene and robot
        super().__init__(**kwags)
        self.create_table_and_wall()
        self.load_robot()
        self.setup_planner()
        self.load_camera(kwags.get('camera_w', 640), kwags.get('camera_h', 480))
        self.pre_move()
        self.load_actors()

    def load_actors(self):
        # load self.hammer, self.hammer_data and self.block
        self.hammer = self.load_hammer()
        self.hammer_data = self.get_hammer_data()
        self.block = self.load_block()

    def play_once(self):
        # The function that needs to be generated.
        
        # Get the poses of the hammer and the block
        hammer_pose = self.hammer.get_pose()
        block_pose = self.block.get_pose()

        # Determine which arm to use based on the block's x coordinate
        if block_pose.p[0] > 0:
            arm = 'right'
        else:
            arm = 'left'

        # Get the pre-grasp and target grasp poses for the hammer
        pre_grasp_hammer_pose = self.get_grasp_pose_w_labeled_direction(self.hammer, self.hammer_data, pre_dis=0.1)
        target_grasp_hammer_pose = self.get_grasp_pose_w_labeled_direction(self.hammer, self.hammer_data)

        # Move the arm to grasp the hammer
        if arm == 'right':
            self.open_right_gripper()
            self.right_move_to_pose_with_screw(pre_grasp_hammer_pose)
            self.right_move_to_pose_with_screw(target_grasp_hammer_pose)
            self.close_right_gripper()
            self.right_move_to_pose_with_screw(pre_grasp_hammer_pose)
        else:
            self.open_left_gripper()
            self.left_move_to_pose_with_screw(pre_grasp_hammer_pose)
            self.left_move_to_pose_with_screw(target_grasp_hammer_pose)
            self.close_left_gripper()
            self.left_move_to_pose_with_screw(pre_grasp_hammer_pose)

        # Get the pre-grasp and target grasp poses for the block
        pre_grasp_block_pose = self.get_grasp_pose_w_labeled_direction(self.block, self.block_data, pre_dis=0.1)
        target_grasp_block_pose = self.get_grasp_pose_w_labeled_direction(self.block, self.block_data)

        # Move the arm to beat the block with the hammer
        if arm == 'right':
            self.right_move_to_pose_with_screw(pre_grasp_block_pose)
            self.right_move_to_pose_with_screw(target_grasp_block_pose)
        else:
            self.left_move_to_pose_with_screw(pre_grasp_block_pose)
            self.left_move_to_pose_with_screw(target_grasp_block_pose)

        # Release the hammer
        if arm == 'right':
            self.open_right_gripper()
        else:
            self.open_left_gripper()

    def check_success(self):
        # check the task success
        # Implement the logic to check if the block has been successfully beaten
        pass
```

### Explanation:
1. **Setup and Loading**: The `setup_demo` and `load_actors` methods are responsible for setting up the environment and loading the necessary actors (hammer and block).

2. **Play Once**: The `play_once` method is the core function that performs the task. It:
   - Determines which arm to use based on the block's x coordinate.
   - Grasps the hammer using the appropriate arm.
   - Moves the hammer to beat the block.
   - Releases the hammer after the task is completed.

3. **Check Success**: The `check_success` method is a placeholder where you can implement the logic to verify if the block has been successfully beaten.